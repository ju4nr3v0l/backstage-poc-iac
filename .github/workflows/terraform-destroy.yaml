# .github/workflows/terraform-destroy.yml
name: Terraform Destroy

on: { workflow_dispatch: {} }

jobs:
  destroy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    environment: poc
    permissions:
      id-token: write   # üîë necesario para OIDC
      contents: read    # m√≠nimamente requerido para checkout
    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID:       ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET:   ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_TENANT_ID:       ${{ secrets.AZURE_TENANT_ID }}
    steps:
      - uses: actions/checkout@v3

      - uses: azure/login@v1
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: hashicorp/setup-terraform@v2
        with: { terraform_version: 1.7.5 }

      - name: Terraform Init
        working-directory: infra
        run: terraform init -input=false -upgrade

      # 1) Desinstalar Ingress primero
      - name: Terraform destroy NGINX release
        working-directory: infra
        run: terraform destroy -target=helm_release.nginx_ingress -auto-approve -input=false

      # 2) Esperar a que el Service desaparezca y la IP quede libre
      - name: Esperar liberaci√≥n de IP p√∫blica
        run: |
          set -e
          echo "Esperando a que el Service nginx-ingress-controller se elimine‚Ä¶"
          for i in {1..30}; do
            if kubectl -n ingress-basic get svc nginx-ingress-controller >/dev/null 2>&1; then
              echo "A√∫n existe, reintentando ($i/30)‚Ä¶"
              sleep 20
            else
              echo "Service eliminado."
              break
            fi
          done
          echo "Validando que la IP no est√© asociada‚Ä¶"
          for i in {1..15}; do
            STATUS=$(az network public-ip show \
              --resource-group MC_RG-poc-iac_CK-poc-iac_eastus \
              --name nginx-ingress-pip \
              --query "ipConfiguration.id" -o tsv)
            if [[ -z "$STATUS" ]]; then
              echo "IP desasociada."
              break
            fi
            echo "IP a√∫n asociada, esperando ($i/15)‚Ä¶"
            sleep 20
          done

      # 3) Destroy total sin bloqueo
      - name: Terraform Destroy restante
        working-directory: infra
        run: terraform destroy -auto-approve -input=false
